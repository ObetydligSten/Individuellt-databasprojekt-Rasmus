// <auto-generated />
using System;
using Individuellt_databasprojekt_Rasmus.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Individuellt_databasprojekt_Rasmus.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    partial class SchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Individuellt_databasprojekt_Rasmus.Models.Betyg", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<int>("KursId")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<DateOnly>("GradeSet")
                        .HasColumnType("date");

                    b.HasKey("StudentId", "PersonalId", "KursId");

                    b.HasIndex("KursId");

                    b.HasIndex("PersonalId");

                    b.ToTable("Betygs", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            PersonalId = 2,
                            KursId = 1,
                            Grade = 3,
                            GradeSet = new DateOnly(2023, 11, 1)
                        },
                        new
                        {
                            StudentId = 2,
                            PersonalId = 4,
                            KursId = 2,
                            Grade = 4,
                            GradeSet = new DateOnly(2023, 10, 15)
                        },
                        new
                        {
                            StudentId = 3,
                            PersonalId = 6,
                            KursId = 3,
                            Grade = 5,
                            GradeSet = new DateOnly(2023, 12, 5)
                        },
                        new
                        {
                            StudentId = 4,
                            PersonalId = 2,
                            KursId = 4,
                            Grade = 3,
                            GradeSet = new DateOnly(2023, 11, 20)
                        },
                        new
                        {
                            StudentId = 5,
                            PersonalId = 4,
                            KursId = 1,
                            Grade = 4,
                            GradeSet = new DateOnly(2023, 12, 10)
                        },
                        new
                        {
                            StudentId = 6,
                            PersonalId = 2,
                            KursId = 2,
                            Grade = 5,
                            GradeSet = new DateOnly(2023, 10, 30)
                        },
                        new
                        {
                            StudentId = 7,
                            PersonalId = 6,
                            KursId = 3,
                            Grade = 3,
                            GradeSet = new DateOnly(2023, 12, 25)
                        },
                        new
                        {
                            StudentId = 8,
                            PersonalId = 4,
                            KursId = 4,
                            Grade = 4,
                            GradeSet = new DateOnly(2023, 11, 12)
                        },
                        new
                        {
                            StudentId = 9,
                            PersonalId = 2,
                            KursId = 1,
                            Grade = 5,
                            GradeSet = new DateOnly(2023, 12, 1)
                        },
                        new
                        {
                            StudentId = 10,
                            PersonalId = 4,
                            KursId = 2,
                            Grade = 3,
                            GradeSet = new DateOnly(2023, 10, 20)
                        },
                        new
                        {
                            StudentId = 11,
                            PersonalId = 6,
                            KursId = 3,
                            Grade = 4,
                            GradeSet = new DateOnly(2023, 12, 15)
                        },
                        new
                        {
                            StudentId = 1,
                            PersonalId = 2,
                            KursId = 4,
                            Grade = 5,
                            GradeSet = new DateOnly(2024, 1, 28)
                        },
                        new
                        {
                            StudentId = 2,
                            PersonalId = 4,
                            KursId = 1,
                            Grade = 3,
                            GradeSet = new DateOnly(2024, 2, 5)
                        },
                        new
                        {
                            StudentId = 3,
                            PersonalId = 6,
                            KursId = 2,
                            Grade = 4,
                            GradeSet = new DateOnly(2023, 10, 25)
                        },
                        new
                        {
                            StudentId = 4,
                            PersonalId = 2,
                            KursId = 3,
                            Grade = 1,
                            GradeSet = new DateOnly(2023, 12, 10)
                        },
                        new
                        {
                            StudentId = 5,
                            PersonalId = 4,
                            KursId = 4,
                            Grade = 3,
                            GradeSet = new DateOnly(2024, 1, 20)
                        },
                        new
                        {
                            StudentId = 6,
                            PersonalId = 2,
                            KursId = 1,
                            Grade = 2,
                            GradeSet = new DateOnly(2023, 12, 15)
                        },
                        new
                        {
                            StudentId = 7,
                            PersonalId = 6,
                            KursId = 2,
                            Grade = 5,
                            GradeSet = new DateOnly(2023, 10, 30)
                        },
                        new
                        {
                            StudentId = 8,
                            PersonalId = 4,
                            KursId = 3,
                            Grade = 3,
                            GradeSet = new DateOnly(2023, 12, 10)
                        },
                        new
                        {
                            StudentId = 9,
                            PersonalId = 2,
                            KursId = 4,
                            Grade = 2,
                            GradeSet = new DateOnly(2023, 11, 25)
                        },
                        new
                        {
                            StudentId = 10,
                            PersonalId = 4,
                            KursId = 1,
                            Grade = 1,
                            GradeSet = new DateOnly(2023, 12, 5)
                        });
                });

            modelBuilder.Entity("Individuellt_databasprojekt_Rasmus.Models.Kurs", b =>
                {
                    b.Property<int>("KursId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KursId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("KursName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KursId");

                    b.ToTable("Kurss", (string)null);

                    b.HasData(
                        new
                        {
                            KursId = 1,
                            Active = false,
                            KursName = "Svenska"
                        },
                        new
                        {
                            KursId = 2,
                            Active = false,
                            KursName = "Engelska"
                        },
                        new
                        {
                            KursId = 3,
                            Active = true,
                            KursName = "Matematik"
                        },
                        new
                        {
                            KursId = 4,
                            Active = false,
                            KursName = "Programmering"
                        });
                });

            modelBuilder.Entity("Individuellt_databasprojekt_Rasmus.Models.Personal", b =>
                {
                    b.Property<int>("PersonalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonalId"));

                    b.Property<string>("Befattning")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("YearsService")
                        .HasColumnType("int");

                    b.HasKey("PersonalId");

                    b.ToTable("Personals", (string)null);

                    b.HasData(
                        new
                        {
                            PersonalId = 1,
                            Befattning = "Admin",
                            FirstName = "Chris",
                            LastName = "Jakobsson",
                            Salary = 30000,
                            YearsService = 6
                        },
                        new
                        {
                            PersonalId = 2,
                            Befattning = "Lärare",
                            FirstName = "Eva",
                            LastName = "Andersson",
                            Salary = 35000,
                            YearsService = 8
                        },
                        new
                        {
                            PersonalId = 3,
                            Befattning = "Vaktmästare",
                            FirstName = "David",
                            LastName = "Pettersson",
                            Salary = 28000,
                            YearsService = 4
                        },
                        new
                        {
                            PersonalId = 4,
                            Befattning = "Lärare",
                            FirstName = "Sofia",
                            LastName = "Lindgren",
                            Salary = 32000,
                            YearsService = 3
                        },
                        new
                        {
                            PersonalId = 5,
                            Befattning = "IT-tekniker",
                            FirstName = "Lars",
                            LastName = "Gustavsson",
                            Salary = 38000,
                            YearsService = 5
                        },
                        new
                        {
                            PersonalId = 6,
                            Befattning = "Lärare",
                            FirstName = "Emma",
                            LastName = "Andersson",
                            Salary = 26000,
                            YearsService = 2
                        });
                });

            modelBuilder.Entity("Individuellt_databasprojekt_Rasmus.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonNr")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("StudentId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Class = "A1",
                            FirstName = "Lasse",
                            LastName = "Persson",
                            PersonNr = "19850312-1234"
                        },
                        new
                        {
                            StudentId = 2,
                            Class = "B2",
                            FirstName = "Anna",
                            LastName = "Andersson",
                            PersonNr = "19901005-5678"
                        },
                        new
                        {
                            StudentId = 3,
                            Class = "A1",
                            FirstName = "Erik",
                            LastName = "Ekström",
                            PersonNr = "19930420-9012"
                        },
                        new
                        {
                            StudentId = 4,
                            Class = "B2",
                            FirstName = "Maria",
                            LastName = "Månsson",
                            PersonNr = "19970215-3456"
                        },
                        new
                        {
                            StudentId = 5,
                            Class = "C3",
                            FirstName = "Karl",
                            LastName = "Karlsson",
                            PersonNr = "19981230-7890"
                        },
                        new
                        {
                            StudentId = 6,
                            Class = "B2",
                            FirstName = "Sara",
                            LastName = "Svensson",
                            PersonNr = "20010325-2345"
                        },
                        new
                        {
                            StudentId = 7,
                            Class = "A1",
                            FirstName = "Johan",
                            LastName = "Johansson",
                            PersonNr = "19940810-6789"
                        },
                        new
                        {
                            StudentId = 8,
                            Class = "A1",
                            FirstName = "Emma",
                            LastName = "Engström",
                            PersonNr = "19871203-0123"
                        },
                        new
                        {
                            StudentId = 9,
                            Class = "C3",
                            FirstName = "Peter",
                            LastName = "Petersson",
                            PersonNr = "20000218-4567"
                        },
                        new
                        {
                            StudentId = 10,
                            Class = "B2",
                            FirstName = "Lisa",
                            LastName = "Lindström",
                            PersonNr = "19921205-8901"
                        },
                        new
                        {
                            StudentId = 11,
                            Class = "A1",
                            FirstName = "Anders",
                            LastName = "Andersson",
                            PersonNr = "20000120-2345"
                        });
                });

            modelBuilder.Entity("Individuellt_databasprojekt_Rasmus.Models.Betyg", b =>
                {
                    b.HasOne("Individuellt_databasprojekt_Rasmus.Models.Kurs", "Kurs")
                        .WithMany("Kurss")
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Individuellt_databasprojekt_Rasmus.Models.Personal", "Personal")
                        .WithMany("Personals")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Individuellt_databasprojekt_Rasmus.Models.Student", "Student")
                        .WithMany("Students")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kurs");

                    b.Navigation("Personal");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Individuellt_databasprojekt_Rasmus.Models.Kurs", b =>
                {
                    b.Navigation("Kurss");
                });

            modelBuilder.Entity("Individuellt_databasprojekt_Rasmus.Models.Personal", b =>
                {
                    b.Navigation("Personals");
                });

            modelBuilder.Entity("Individuellt_databasprojekt_Rasmus.Models.Student", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
